Row types
fun (tbl) { for (x <-- tbl) where (x.id == 42) [x] }
stdout : fun : (TableHandle((id:Int|a::Base),(|_::Base),(|_::Base))) {}-> [(id:Int|a::Base)]

Onetuple with unit
(1=())
stdout : (1 = ()) : (1:())

Alias record functional update
tests/roundtrip/record_update.links
filemode : true
stdout : (q = [3, 1, 2]) : Q

Recursive effect
fun w(g) { handle(g()) { case Return(()) -> () case F(h, res) -> w(h) }} w
args : --enable-handlers
stdout : @fun : \(\(\) \{ \|\(mu (\w) \. F:\(\(\) \{ \|\1\}\-> \(\)\) \{\}\-> _::Any,wild:\(\)\|(\w)\)\}\-> \(\)\) \{F\{_\}\|\2\}~> \(\)
